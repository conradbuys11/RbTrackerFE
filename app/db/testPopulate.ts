import type { NewWeek } from "~/classes/NewWeek";
import type { TeamInYear } from "~/classes/TeamInYear";
import type { TiyDtoCreateWeeksGet } from "~/classes/TeamInYear/TiyDtoCreateWeeksGet";
import type { WeekDtoCreateWeeks } from "~/classes/Week/WeekDtoCreateWeeks";

interface G {
  awayTeamId: number;
  homeTeamId: number;
}

const cg = (a: number, h: number): G => {
  return { awayTeamId: a, homeTeamId: h };
};

// const testPopulate = (weeks: NewWeek[], teams: TeamInYear[]) => {
//   return weeks.map((week) => ({
//     ...week,
//     games: week.games.map((game) => ({
//       ...game,
//       awayTeam: teams[0],
//       homeTeam: teams[0],
//     })),
//   }));
// };

enum t {
  NE = 1,
  MIA,
  BUF,
  NYJ,
  BAL,
  PIT,
  CIN,
  CLE,
  DEN,
  LAC,
  KC,
  LV,
  IND,
  JAX,
  HOU,
  TEN,
  WAS,
  DAL,
  PHI,
  NYG,
  CHI,
  DET,
  GB,
  MIN,
  SF,
  ARI,
  LAR,
  SEA,
  TB,
  ATL,
  CAR,
  NO,
}

const tWeeks = [
  // week one
  [
    cg(t.BUF, t.NO),
    cg(t.NE, t.NYJ),
    cg(t.KC, t.PHI),
    cg(t.LV, t.DAL),
    cg(t.BAL, t.MIA),
    cg(t.CIN, t.DEN),
    cg(t.PIT, t.LAC),
    cg(t.TEN, t.IND),
    cg(t.NYG, t.ATL),
    cg(t.WAS, t.CAR),
    cg(t.ARI, t.JAX),
    cg(t.LAR, t.HOU),
    cg(t.SEA, t.GB),
    cg(t.CHI, t.CLE),
    cg(t.DET, t.SF),
    cg(t.MIN, t.TB),
  ],
  // week two
  [
    cg(t.MIA, t.NE),
    cg(t.NYJ, t.BUF),
    cg(t.DEN, t.BAL),
    cg(t.KC, t.TEN),
    cg(t.LAC, t.CIN),
    cg(t.CLE, t.DET),
    cg(t.HOU, t.ARI),
    cg(t.IND, t.PIT),
    cg(t.NYG, t.LV),
    cg(t.PHI, t.DAL),
    cg(t.SF, t.JAX),
    cg(t.SEA, t.WAS),
    cg(t.CHI, t.LAR),
    cg(t.GB, t.MIN),
    cg(t.CAR, t.ATL),
    cg(t.TB, t.NO),
  ],
  // week three
  [
    cg(t.BUF, t.KC),
    cg(t.NE, t.DEN),
    cg(t.LV, t.LAC),
    cg(t.CIN, t.GB),
    cg(t.CLE, t.BAL),
    cg(t.JAX, t.HOU),
    cg(t.DAL, t.MIA),
    cg(t.WAS, t.NYG),
    cg(t.ARI, t.CHI),
    cg(t.LAR, t.TEN),
    cg(t.DET, t.PIT),
    cg(t.MIN, t.SEA),
    cg(t.ATL, t.SF),
    cg(t.CAR, t.PHI),
    cg(t.NO, t.IND),
    cg(t.TB, t.NYJ),
  ],
  // week four
  [
    cg(t.DEN, t.LV),
    cg(t.LAC, t.WAS),
    cg(t.BAL, t.MIN),
    cg(t.CIN, t.KC),
    cg(t.PIT, t.CHI),
    cg(t.HOU, t.BUF),
    cg(t.IND, t.MIA),
    cg(t.JAX, t.NE),
    cg(t.TEN, t.CLE),
    cg(t.DAL, t.CAR),
    cg(t.PHI, t.TB),
    cg(t.ARI, t.SEA),
    cg(t.LAR, t.SF),
    cg(t.GB, t.DET),
    cg(t.ATL, t.NYJ),
    cg(t.NO, t.NYG),
  ],
  // week five
  [
    cg(t.BUF, t.CAR),
    cg(t.MIA, t.LAC),
    cg(t.NE, t.ATL),
    cg(t.NYJ, t.IND),
    cg(t.KC, t.BAL),
    cg(t.PIT, t.LV),
    cg(t.HOU, t.TEN),
    cg(t.JAX, t.CIN),
    cg(t.PHI, t.NYG),
    cg(t.WAS, t.NO),
    cg(t.SF, t.ARI),
    cg(t.SEA, t.LAR),
    cg(t.DET, t.DEN),
    cg(t.GB, t.CHI),
    cg(t.MIN, t.CLE),
    cg(t.TB, t.DAL),
  ],
  // week six
  [
    cg(t.MIA, t.HOU),
    cg(t.NE, t.TEN),
    cg(t.DEN, t.KC),
    cg(t.LAC, t.DAL),
    cg(t.LV, t.CIN),
    cg(t.CLE, t.GB),
    cg(t.IND, t.JAX),
    cg(t.NYG, t.NYJ),
    cg(t.ARI, t.BAL),
    cg(t.LAR, t.PIT),
    cg(t.SF, t.PHI),
    cg(t.CHI, t.NO),
    cg(t.MIN, t.DET),
    cg(t.ATL, t.WAS),
  ],
  // week seven
  [
    cg(t.BUF, t.NYJ),
    cg(t.KC, t.PIT),
    cg(t.LAC, t.HOU),
    cg(t.CLE, t.CIN),
    cg(t.IND, t.LAR),
    cg(t.JAX, t.SEA),
    cg(t.DAL, t.MIN),
    cg(t.WAS, t.DEN),
    cg(t.DET, t.ATL),
    cg(t.GB, t.SF),
    cg(t.CAR, t.NE),
    cg(t.NO, t.PHI),
    cg(t.TB, t.ARI),
  ],
  // week eight
  [
    cg(t.NE, t.MIA),
    cg(t.NYJ, t.LV),
    cg(t.BAL, t.PIT),
    cg(t.CLE, t.BUF),
    cg(t.HOU, t.JAX),
    cg(t.TEN, t.ARI),
    cg(t.DAL, t.KC),
    cg(t.NYG, t.CHI),
    cg(t.PHI, t.LAC),
    cg(t.WAS, t.GB),
    cg(t.SF, t.IND),
    cg(t.SEA, t.DET),
    cg(t.MIN, t.LAR),
    cg(t.ATL, t.TB),
    cg(t.NO, t.CAR),
  ],
  // week nine
  [
    cg(t.BUF, t.JAX),
    cg(t.MIA, t.TEN),
    cg(t.NYJ, t.NO),
    cg(t.DEN, t.PHI),
    cg(t.KC, t.NYG),
    cg(t.LV, t.WAS),
    cg(t.PIT, t.CLE),
    cg(t.HOU, t.SF),
    cg(t.IND, t.NE),
    cg(t.LAR, t.SEA),
    cg(t.CHI, t.CIN),
    cg(t.DET, t.BAL),
    cg(t.MIN, t.LAC),
    cg(t.CAR, t.TB),
  ],
  // week ten
  [
    cg(t.MIA, t.BUF),
    cg(t.LAC, t.DEN),
    cg(t.CIN, t.NE),
    cg(t.PIT, t.NYJ),
    cg(t.TEN, t.JAX),
    cg(t.WAS, t.KC),
    cg(t.ARI, t.MIN),
    cg(t.SF, t.SEA),
    cg(t.CHI, t.LV),
    cg(t.GB, t.BAL),
    cg(t.ATL, t.DAL),
    cg(t.CAR, t.NYG),
    cg(t.NO, t.LAR),
    cg(t.TB, t.HOU),
  ],
  // week eleven
  [
    cg(t.NE, t.BUF),
    cg(t.NYJ, t.CAR),
    cg(t.BAL, t.LV),
    cg(t.CIN, t.DET),
    cg(t.CLE, t.DEN),
    cg(t.IND, t.HOU),
    cg(t.JAX, t.MIA),
    cg(t.DAL, t.NO),
    cg(t.NYG, t.LAC),
    cg(t.PHI, t.ATL),
    cg(t.LAR, t.ARI),
    cg(t.SEA, t.TEN),
    cg(t.GB, t.PIT),
    cg(t.MIN, t.CHI),
    cg(t.TB, t.WAS),
  ],
  // week twelve
  [
    cg(t.BUF, t.IND),
    cg(t.MIA, t.TB),
    cg(t.DEN, t.NYG),
    cg(t.LV, t.KC),
    cg(t.BAL, t.CLE),
    cg(t.PIT, t.CIN),
    cg(t.HOU, t.NYJ),
    cg(t.WAS, t.PHI),
    cg(t.ARI, t.DAL),
    cg(t.SF, t.MIN),
    cg(t.CHI, t.SEA),
    cg(t.DET, t.GB),
    cg(t.ATL, t.JAX),
    cg(t.CAR, t.TEN),
    cg(t.NO, t.NE),
  ],
  // week thirteen
  [
    cg(t.NYJ, t.MIA),
    cg(t.KC, t.LAC),
    cg(t.LV, t.CLE),
    cg(t.CIN, t.BAL),
    cg(t.JAX, t.IND),
    cg(t.TEN, t.SF),
    cg(t.DAL, t.DEN),
    cg(t.NYG, t.TB),
    cg(t.PHI, t.NE),
    cg(t.WAS, t.BUF),
    cg(t.LAR, t.DET),
    cg(t.SEA, t.ARI),
    cg(t.CHI, t.GB),
    cg(t.ATL, t.CAR),
  ],
  // week fourteen
  [
    cg(t.MIA, t.ATL),
    cg(t.DEN, t.LAC),
    cg(t.BAL, t.CHI),
    cg(t.CIN, t.PIT),
    cg(t.TEN, t.HOU),
    cg(t.NYG, t.DAL),
    cg(t.PHI, t.LV),
    cg(t.ARI, t.IND),
    cg(t.SF, t.LAR),
    cg(t.SEA, t.CLE),
    cg(t.DET, t.MIN),
    cg(t.GB, t.KC),
    cg(t.CAR, t.NO),
    cg(t.TB, t.BUF),
  ],
  // week fifteen
  [
    cg(t.BUF, t.NE),
    cg(t.NYJ, t.JAX),
    cg(t.DEN, t.PIT),
    cg(t.LAC, t.LV),
    cg(t.CLE, t.KC),
    cg(t.HOU, t.BAL),
    cg(t.IND, t.TEN),
    cg(t.DAL, t.WAS),
    cg(t.NYG, t.PHI),
    cg(t.ARI, t.SF),
    cg(t.LAR, t.GB),
    cg(t.CHI, t.DET),
    cg(t.MIN, t.CIN),
    cg(t.CAR, t.SEA),
    cg(t.NO, t.MIA),
    cg(t.TB, t.ATL),
  ],
  // week sixteen
  [
    cg(t.MIA, t.NYJ),
    cg(t.NE, t.TB),
    cg(t.KC, t.DEN),
    cg(t.LV, t.IND),
    cg(t.BAL, t.LAC),
    cg(t.CIN, t.CLE),
    cg(t.PIT, t.MIN),
    cg(t.JAX, t.LAR),
    cg(t.TEN, t.BUF),
    cg(t.DAL, t.NYG),
    cg(t.PHI, t.WAS),
    cg(t.SF, t.CHI),
    cg(t.SEA, t.HOU),
    cg(t.DET, t.ARI),
    cg(t.GB, t.CAR),
    cg(t.ATL, t.NO),
  ],
  // week seventeen
  [
    cg(t.NE, t.HOU),
    cg(t.DEN, t.JAX),
    cg(t.KC, t.LV),
    cg(t.LAC, t.CLE),
    cg(t.PIT, t.BAL),
    cg(t.IND, t.SEA),
    cg(t.TEN, t.NYJ),
    cg(t.PHI, t.DET),
    cg(t.WAS, t.DAL),
    cg(t.LAR, t.NYG),
    cg(t.SF, t.CIN),
    cg(t.CHI, t.MIN),
    cg(t.GB, t.ARI),
    cg(t.ATL, t.BUF),
    cg(t.CAR, t.MIA),
    cg(t.NO, t.TB),
  ],
  // week eighteen
  [
    cg(t.BUF, t.MIA),
    cg(t.NYJ, t.NE),
    cg(t.LAC, t.KC),
    cg(t.LV, t.DEN),
    cg(t.BAL, t.CIN),
    cg(t.CLE, t.PIT),
    cg(t.HOU, t.IND),
    cg(t.JAX, t.TEN),
    cg(t.DAL, t.PHI),
    cg(t.NYG, t.WAS),
    cg(t.ARI, t.LAR),
    cg(t.SEA, t.SF),
    cg(t.DET, t.CHI),
    cg(t.MIN, t.GB),
    cg(t.NO, t.ATL),
    cg(t.TB, t.CAR),
  ],
];

const testPopulate = (
  weeks: WeekDtoCreateWeeks[],
  teams: TiyDtoCreateWeeksGet[]
) => {
  return weeks.map((week, i) => ({
    ...week,
    games: week.games.map((game, j) => {
      const g = tWeeks[i][j];
      const awayTeam = teams.find((team) => team.teamId == g.awayTeamId);
      const homeTeam = teams.find((team) => team.teamId == g.homeTeamId);
      return {
        ...game,
        awayTeam: awayTeam,
        homeTeam: homeTeam,
      };
    }),
  }));
};

export default testPopulate;
